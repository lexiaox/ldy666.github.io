<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>ldy666的blog</title><link>https://lexiaox.github.io/ldy666.github.io</link><description>我思故我在</description><copyright>ldy666的blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://q2.itc.cn/q_70/images03/20250225/e8117dd40aae4db5a64461f1ea0d16fc.jpeg</url><title>avatar</title><link>https://lexiaox.github.io/ldy666.github.io</link></image><lastBuildDate>Sat, 11 Oct 2025 11:27:25 +0000</lastBuildDate><managingEditor>ldy666的blog</managingEditor><ttl>60</ttl><webMaster>ldy666的blog</webMaster><item><title>strcpy的用法</title><link>https://lexiaox.github.io/ldy666.github.io/post/strcpy-de-yong-fa.html</link><description># strcpy函数用法

## 函数原型
```c
char *strcpy(char *dest, const char *src);
```

## 参数说明
- `dest`：目标缓冲区（必须足够大）
- `src`：源字符串（必须以` `结尾）

## 返回值
- 目标字符串`dest`的指针

## 示例代码
```c
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;

int main() {
    char src[] = 'Secure Copy';
    char dest[20];
    
    // 安全复制方式
    strncpy(dest, src, sizeof(dest)-1);
    dest[sizeof(dest)-1] = '\0'; // 手动添加终止符
    
    printf('复制结果: %s
', dest);
    return 0;
}
```

## 注意事项
1. 必须确保目标缓冲区足够大
2. 目标与源不能重叠（否则用memmove）
3. 源字符串不能为NULL
4. 推荐使用`strncpy`+手动添加终止符
以上内容由文心人工智能生成合成
。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/strcpy-de-yong-fa.html</guid><pubDate>Sat, 11 Oct 2025 11:26:21 +0000</pubDate></item><item><title>初始化数组</title><link>https://lexiaox.github.io/ldy666.github.io/post/chu-shi-hua-shu-zu.html</link><description>memset( 数组名, -1, sizeof( 数组名));。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/chu-shi-hua-shu-zu.html</guid><pubDate>Wed, 08 Oct 2025 12:22:14 +0000</pubDate></item><item><title>快速读入读出</title><link>https://lexiaox.github.io/ldy666.github.io/post/kuai-su-du-ru-du-chu.html</link><description>ios::sync_with_stdio(false);
cin.tie(0);。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/kuai-su-du-ru-du-chu.html</guid><pubDate>Mon, 06 Oct 2025 08:42:12 +0000</pubDate></item><item><title>头文件</title><link>https://lexiaox.github.io/ldy666.github.io/post/tou-wen-jian.html</link><description>#include&lt;bits/stdc++.h&gt;
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
#include&lt;math.h&gt;。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/tou-wen-jian.html</guid><pubDate>Mon, 29 Sep 2025 05:17:50 +0000</pubDate></item><item><title>输入一整行包括空格的字符串</title><link>https://lexiaox.github.io/ldy666.github.io/post/shu-ru-yi-zheng-xing-bao-kuo-kong-ge-de-zi-fu-chuan.html</link><description>getline ( cin,   变量名 ); 。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/shu-ru-yi-zheng-xing-bao-kuo-kong-ge-de-zi-fu-chuan.html</guid><pubDate>Tue, 23 Sep 2025 01:03:37 +0000</pubDate></item><item><title>遍历字符串</title><link>https://lexiaox.github.io/ldy666.github.io/post/bian-li-zi-fu-chuan.html</link><description>for ( char  遍历变量 : 字符串变量 )。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/bian-li-zi-fu-chuan.html</guid><pubDate>Mon, 22 Sep 2025 14:42:22 +0000</pubDate></item><item><title>整型转字符串</title><link>https://lexiaox.github.io/ldy666.github.io/post/zheng-xing-zhuan-zi-fu-chuan.html</link><description>变量名1 = to_string ( 变量名2)。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/zheng-xing-zhuan-zi-fu-chuan.html</guid><pubDate>Mon, 22 Sep 2025 14:41:13 +0000</pubDate></item><item><title>字符串删除与保留</title><link>https://lexiaox.github.io/ldy666.github.io/post/zi-fu-chuan-shan-chu-yu-bao-liu.html</link><description>变量名 = 变量名 . substr ( 位置,  保留几个字符);。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/zi-fu-chuan-shan-chu-yu-bao-liu.html</guid><pubDate>Mon, 22 Sep 2025 14:39:48 +0000</pubDate></item><item><title>初始化数组</title><link>https://lexiaox.github.io/ldy666.github.io/post/chu-shi-hua-shu-zu.html</link><description>memset ( 数组名,  0 , sizeof ( 数组名 ) );。</description><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/chu-shi-hua-shu-zu.html</guid><pubDate>Mon, 22 Sep 2025 14:37:17 +0000</pubDate></item><item><title>hello world</title><link>https://lexiaox.github.io/ldy666.github.io/post/hello%20world.html</link><guid isPermaLink="true">https://lexiaox.github.io/ldy666.github.io/post/hello%20world.html</guid><pubDate>Mon, 22 Sep 2025 05:45:16 +0000</pubDate></item></channel></rss>